namespace async_api_client {
    string test_response_data();
};

[Error]
interface ApiError {
    Http(string reason);
    Api(string reason);
    Json(string reason);
};

// Implemented by the foreign bindings
[Trait, WithForeign]
interface HttpClient {
  [Throws=ApiError, Async]
  string fetch(string url); // fetch an URL and return the body
};

dictionary Issue {
    string url;
    string title;
    IssueState state;
};

enum IssueState {
    "Open",
    "Closed",
};

// Implemented by the Rust code
interface ApiClient {
  constructor(HttpClient http_client);

  [Throws=ApiError, Async]
  Issue get_issue(string owner, string repository, u32 issue_number);
};
